pipeline {
  agent {
    docker { image 'liquibase/liquibase:4.12.0' }
  }
  environment {
    POSTGESQL_CREDS=credentials('a68c8ecc-5c61-467f-acb6-f3148fe941c7')
  }
  stages {
    stage('Status') {
      steps {
        sh 'liquibase status --url="jdbc:postgresql://mydatabaseinstance.c5te0aokpcrs.us-west-2.rds.amazonaws.com:5432/testdatabase1" --changeLogFile=my_app-wrapper.xml --username=$POSTGESQL_CREDS_USR --password=$POSTGESQL_CREDS_PSWD'
      }
    }
    stage('Update') {
      steps {
        sh 'liquibase update --url="jdbc:postgresql://mydatabaseinstance.c5te0aokpcrs.us-west-2.rds.amazonaws.com:5432/testdatabase1" --changeLogFile=my_app-wrapper.xml --username=$POSTGESQL_CREDS_USR --password=$POSTGESQL_CREDS_PSWD'
      }
    }
  }
  post {
    always {
      cleanWs()
    }
  }
}
